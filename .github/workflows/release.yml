name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: anime-schedule-cli-linux
          - os: macos-latest
            artifact_name: anime-schedule-cli-macos
          - os: windows-latest
            artifact_name: anime-schedule-cli-windows.exe

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
    
    - name: Build
      run: cargo build --release --verbose
    
    - name: Package
      run: |
        cd target/release
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a ../../${{ matrix.artifact_name }}.zip anime-schedule-cli.exe
        else
          tar czf ../../${{ matrix.artifact_name }}.tar.gz anime-schedule-cli
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}

  publish:
    name: Publish to crates.io
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Publish to crates.io
      run: cargo publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }} 